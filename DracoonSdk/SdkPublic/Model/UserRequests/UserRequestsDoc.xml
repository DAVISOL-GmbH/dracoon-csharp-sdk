<docs>

  <members name="deletePreviousVersionsRequest">

    <DeletePreviousVersionsRequest>
      <summary>
        Request to delete specific node versions.
      </summary>
    </DeletePreviousVersionsRequest>

    <VersionIds>
      <summary>
        The specific node version ids which should be deleted.
      </summary>
    </VersionIds>

    <DeletePreviousVersionsRequestConstructor>
      <summary>
        Constructs a new delete previous versions request.
      </summary>
      <param name="versionIds">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="deletePreviousVersionsRequest"]/VersionIds/*'/>
      </param>
    </DeletePreviousVersionsRequestConstructor>

  </members>

  <members name="copyNode">
    <CopyNode>
      <summary>
        Informations about the node which should be copied.
      </summary>
    </CopyNode>
    <NodeId>
      <summary>
        The id of the node which should be copied.
      </summary>
    </NodeId>
    <NewName>
      <summary>
        A new name for the copied node.
        <para>(if not set, the copied node has the same name as the source node)</para>
      </summary>
    </NewName>
    <CopyNodeConstructor>
      <summary>
        Constructs a new copy node information.
      </summary>
      <param name="nodeId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="copyNode"]/NodeId/*'/>
      </param>
      <param name="newName">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="copyNode"]/NewName/*'/>
      </param>
    </CopyNodeConstructor>
  </members>

  <members name="copyNodesRequest">
    <CopyNodesRequest>
      <summary>
        Request to copy nodes.
      </summary>
    </CopyNodesRequest>
    <TargetNodeId>
      <summary>
        The id of the node where the nodes should be copied to.
      </summary>
    </TargetNodeId>
    <NodesToBeCopied>
      <summary>
        The information about the nodes which should be copied. See also <seealso cref="Dracoon.Sdk.Model.CopyNode"/>
      </summary>
    </NodesToBeCopied>
    <ResolutionStrategy>
      <summary>
        The conflict resolution strategy for the copy operation. See also <seealso cref="Dracoon.Sdk.Model.ResolutionStrategy"/>
      </summary>
    </ResolutionStrategy>
    <KeepShareLinks>
      <summary>
        Set to <c>true</c> if any existing share link which references to the source copied nodes should now reference the new copied node.
      </summary>
    </KeepShareLinks>
    <CopyNodesRequestConstructor>
      <summary>
        Constructs a new copy nodes request.
      </summary>
      <param name="targetNodeId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="copyNodesRequest"]/TargetNodeId/*'/>
      </param>
      <param name="nodesToBeCopied">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="copyNodesRequest"]/NodesToBeCopied/*'/>
      </param>
      <param name="resolutionStrategy">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="copyNodesRequest"]/ResolutionStrategy/*'/>
      </param>
      <param name="keepShareLinks">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="copyNodesRequest"]/KeepShareLinks/*'/>
      </param>
    </CopyNodesRequestConstructor>
  </members>

  <members name="createDownloadShareRequest">
    <CreateDownloadShare>
      <summary>
        Request to create a new download share.
      </summary>
    </CreateDownloadShare>
    <NodeId>
      <summary>
        The id of the shared node.
      </summary>
    </NodeId>
    <Name>
      <summary>
        The name of the new share.
      </summary>
    </Name>
    <AccessPassword>
      <summary>
        The access password of the new download share.
        <para>
          (Can only be used if the referenced node is NOT encrypted)
        </para>
      </summary>
    </AccessPassword>
    <EncryptionPassword>
      <summary>
        The encryption password of the new download share.
        <para>
          (Can only be used if the referenced node is encrypted)
        </para>
      </summary>
    </EncryptionPassword>
    <Expiration>
      <summary>
        The expiration date of the new share.
      </summary>
    </Expiration>
    <Notes>
      <summary>
        The notes of the new share.
      </summary>
    </Notes>
    <InternalNotes>
      <summary>
        The internal notes of the new share.
      </summary>
    </InternalNotes>
    <ShowCreatorName>
      <summary>
        If set to <c>true</c> the creators name for the new share will be shown.
      </summary>
    </ShowCreatorName>
    <ShowCreatorUserName>
      <summary>
        If set to <c>true</c> the creators user name for the new share will be shown.
      </summary>
    </ShowCreatorUserName>
    <NotifyCreator>
      <summary>
        If set to <c>true</c> the creator will receive a email notification for every usage of the new download share.
      </summary>
    </NotifyCreator>
    <MaxAllowedDownloads>
      <summary>
        Limit the maximum allowed usages of the new download share.
      </summary>
    </MaxAllowedDownloads>
    <EmailRecipients>
      <summary>
        The receiver email addresses which should be receive the specified email with the new share link.
        <para>
          (If not set no email will be sent)
        </para>
      </summary>
    </EmailRecipients>
    <EmailSubject>
      <summary>
        The subject for the email of the new share.
      </summary>
    </EmailSubject>
    <EmailBody>
      <summary>
        The body for the email of the new share.
      </summary>
    </EmailBody>
    <SmsRecipients>
      <summary>
        The mobile phone numbers which should receive the access password.
        <para>
          (If not set no sms will be sent; Can only be used if the referenced node is NOT encrypted)
        </para>
      </summary>
    </SmsRecipients>
    <CreateDownloadShareRequestConstructor>
      <summary>
        Constructs a new create download share request.
      </summary>
      <param name="nodeId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/NodeId/*'/>
      </param>
      <param name="showCreatorName">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/Name/*'/>
      </param>
      <param name="showCreatorUserName">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/AccessPassword/*'/>
      </param>
      <param name="notifyCreator">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/EncryptionPassword/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/Expiration/*'/>
      </param>
      <param name="accessPassword">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/Notes/*'/>
      </param>
      <param name="encryptionPassword">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/ShowCreatorName/*'/>
      </param>
      <param name="expiration">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/ShowCreatorUserName/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/NotifyCreator/*'/>
      </param>
      <param name="maxAllowedDownloads">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/MaxAllowedDownloads/*'/>
      </param>
      <param name="emailRecipients">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/EmailRecipients/*'/>
      </param>
      <param name="emailSubject">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/EmailSubject/*'/>
      </param>
      <param name="emailBody">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/EmailBody/*'/>
      </param>
      <param name="smsRecipients">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createDownloadShareRequest"]/SmsRecipients/*'/>
      </param>
    </CreateDownloadShareRequestConstructor>
  </members>

  <members name="createFolderRequest">
    <CreateFolderRequest>
      <summary>
        Request to create a new folder.
      </summary>
    </CreateFolderRequest>
    <ParentId>
      <summary>
        The parent node id under which the new folder should be created.
      </summary>
    </ParentId>
    <Name>
      <summary>
        The name of the new folder.
      </summary>
    </Name>
    <Notes>
      <summary>
        The notes of the new folder.
      </summary>
    </Notes>
    <CreateFolderRequestConstructor>
      <summary>
        Constructs a new create folder request.
      </summary>
      <param name="parentId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createFolderRequest"]/ParentId/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createFolderRequest"]/Name/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createFolderRequest"]/Notes/*'/>
      </param>
    </CreateFolderRequestConstructor>
  </members>

  <members name="createRoomRequest">
    <CreateRoomRequest>
      <summary>
        Request to create a new room.
      </summary>
    </CreateRoomRequest>
    <ParentId>
      <summary>
        The parent node id under which the new room should be created.
        <para>
          (If not set, the new room will be a top level room)
        </para>
      </summary>
    </ParentId>
    <Name>
      <summary>
        The name of the new room.
      </summary>
    </Name>
    <Quota>
      <summary>
        The quota of the new room.
      </summary>
    </Quota>
    <Notes>
      <summary>
        The notes of the new room.
      </summary>
    </Notes>
    <RecycleBinRetentionPeriod>
      <summary>
        The retention period for deleted nodes in days.
      </summary>
    </RecycleBinRetentionPeriod>
    <HasInheritPermissions>
      <summary>
        If set to <c>true</c> the permissions from the parent room will be set.
      </summary>
    </HasInheritPermissions>
    <AdminUserIds>
      <summary>
        The list of user ids which have admin permissions on the new room.
        <para>
          (Must contain at least one user id if no <see cref="Dracoon.Sdk.Model.CreateRoomRequest.AdminGroupIds"/> is set)
        </para>
      </summary>
    </AdminUserIds>
    <AdminGroupIds>
      <summary>
        The list of group ids which have admin permissions on the new room.
        <para>
          (Must contain at least one group id if no <see cref="Dracoon.Sdk.Model.CreateRoomRequest.AdminUserIds"/> is set)
        </para>
      </summary>
    </AdminGroupIds>
    <NewGroupMemberAcceptance>
      <summary>
        Behaviour when new users are added to the group. See also <seealso cref="Dracoon.Sdk.Model.GroupMemberAcceptance"/>.
        <para>
          (Only relevant if at least one group id in <see cref="Dracoon.Sdk.Model.CreateRoomRequest.AdminUserIds"/> is set)
        </para>
      </summary>
    </NewGroupMemberAcceptance>
    <CreateRoomRequestConstructor>
      <summary>
        Constructs a new create room request.
      </summary>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createRoomRequest"]/Name/*'/>
      </param>
      <param name="parentId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createRoomRequest"]/ParentId/*'/>
      </param>
      <param name="newGroupMemberAcceptance">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createRoomRequest"]/NewGroupMemberAcceptance/*'/>
      </param>
      <param name="quota">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createRoomRequest"]/Quota/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createRoomRequest"]/Notes/*'/>
      </param>
      <param name="recycleBinRetentionPeriod">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createRoomRequest"]/RecycleBinRetentionPeriod/*'/>
      </param>
      <param name="hasInheritPermissions">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createRoomRequest"]/HasInheritPermissions/*'/>
      </param>
      <param name="adminUserIds">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createRoomRequest"]/AdminUserIds/*'/>
      </param>
      <param name="adminGroupIds">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createRoomRequest"]/AdminGroupIds/*'/>
      </param>
    </CreateRoomRequestConstructor>
  </members>

  <members name="createUploadShareRequest">
    <CreateUploadShareRequest>
      <summary>
        Request to create a new upload share.
      </summary>
    </CreateUploadShareRequest>
    <NodeId>
      <summary>
        The id of the node in which the files will be uploaded.
      </summary>
    </NodeId>
    <Name>
      <summary>
        The name of the new share.
      </summary>
    </Name>
    <AccessPassword>
      <summary>
        The access password of the new upload share.
      </summary>
    </AccessPassword>
    <Expiration>
      <summary>
        The expiration date of the new share.
      </summary>
    </Expiration>
    <UploadedFilesExpirationPeriod>
      <summary>
        Number of days after which uploaded files expire.
      </summary>
    </UploadedFilesExpirationPeriod>
    <Notes>
      <summary>
        The notes of the new share.
      </summary>
    </Notes>
    <InternalNotes>
      <summary>
        The internal notes of the new share.
      </summary>
    </InternalNotes>
    <NotifyCreator>
      <summary>
        If set to <c>true</c> the creator will receive a email notification if a file is uploaded with the new upload share.
      </summary>
    </NotifyCreator>
    <ShowUploadedFiles>
      <summary>
        Allow display of already uploaded files.
      </summary>
    </ShowUploadedFiles>
    <MaxAllowedUploads>
      <summary>
        Maximal amount of files which can be uploaded with the new upload share.
      </summary>
    </MaxAllowedUploads>
    <MaxAllowedTotalSizeOverAllUploadedFiles>
      <summary>
        Maximal total size over all still uploaded files (in bytes).
      </summary>
    </MaxAllowedTotalSizeOverAllUploadedFiles>
    <EmailRecipients>
      <summary>
        The receiver email addresses which should be receive the specified email with the new share link.
        <para>
          (If not set no email will be sent)
        </para>
      </summary>
    </EmailRecipients>
    <EmailSubject>
      <summary>
        The subject for the email of the new share.
      </summary>
    </EmailSubject>
    <EmailBody>
      <summary>
        The body for the email of the new share.
      </summary>
    </EmailBody>
    <SmsRecipients>
      <summary>
        The mobile phone numbers which should receive the access password.
        <para>
          (If not set no sms will be sent
        </para>
      </summary>
    </SmsRecipients>
    <CreateUploadShareRequestConstructor>
      <summary>
        Constructs a new create upload share request.
      </summary>
      <param name="nodeId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/NodeId/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/Name/*'/>
      </param>
      <param name="notifyCreator">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/NotifyCreator/*'/>
      </param>
      <param name="showUploadedFiles">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/ShowUploadedFiles/*'/>
      </param>
      <param name="accessPassword">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/AccessPassword/*'/>
      </param>
      <param name="expiration">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/Expiration/*'/>
      </param>
      <param name="uploadedFileExpirationPeriod">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/UploadedFilesExpirationPeriod/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/Notes/*'/>
      </param>
      <param name="maxAllowedUploads">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/MaxAllowedUploads/*'/>
      </param>
      <param name="maxAllowedTotalSizeOverAllUploadedFiles">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/MaxAllowedTotalSizeOverAllUploadedFiles/*'/>
      </param>
      <param name="emailRecipients">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/EmailRecipients/*'/>
      </param>
      <param name="emailSubject">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/EmailSubject/*'/>
      </param>
      <param name="emailBody">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/EmailBody/*'/>
      </param>
      <param name="smsRecipients">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="createUploadShareRequest"]/SmsRecipients/*'/>
      </param>
    </CreateUploadShareRequestConstructor>
  </members>

  <members name="deleteNodesRequest">
    <DeleteNodesRequest>
      <summary>
        Request to delete nodes.
      </summary>
    </DeleteNodesRequest>
    <Ids>
      <summary>
        The node ids which should be deleted.
      </summary>
    </Ids>
    <DeleteNodesRequestConstructor>
      <summary>
        Constructs a new delete nodes request.
      </summary>
      <param name="ids">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="deleteNodesRequest"]/Ids/*'/>
      </param>
    </DeleteNodesRequestConstructor>
  </members>

  <members name="enableRoomEncryptionRequest">
    <EnableRoomEncryptionRequest>
      <summary>
        Request to enable the encryption in the specified room.
      </summary>
    </EnableRoomEncryptionRequest>
    <Id>
      <summary>
        The room id for which the encryption should be enabled.
      </summary>
    </Id>
    <IsEncryptionEnabled>
      <summary>
        If set to <c>true</c> the encryption for the room will be enabled, otherwise the encryption of the will be disabled.
      </summary>
    </IsEncryptionEnabled>
    <UseDataSpaceRescueKey>
      <summary>
        If set to <c>true</c> the rescue key of the dataspace will be usable at the room.
      </summary>
    </UseDataSpaceRescueKey>
    <DataRoomRescueKeyPassword>
      <summary>
        If a room rescue key should be set you have to specify a private key password for the new key pair.
      </summary>
    </DataRoomRescueKeyPassword>

    <DataRoomRescueKeyPairAlgorithm>
      <summary>
        The algorithm for the key pair which should be used as rescue key pair.
      </summary>
    </DataRoomRescueKeyPairAlgorithm>
    
    <EnableRoomEncryptionRequestConstructor>
      <summary>
        Constructs a new enable room encryption request.
      </summary>
      <param name="id">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="enableRoomEncryptionRequest"]/Id/*'/>
      </param>
      <param name="dataRoomRescueKeyPairAlgorithm">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="enableRoomEncryptionRequest"]/DataRoomRescueKeyPairAlgorithm/*'/>
      </param>
      <param name="isEncryptionEnabled">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="enableRoomEncryptionRequest"]/IsEncryptionEnabled/*'/>
      </param>
      <param name="useDataSpaceRescueKey">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="enableRoomEncryptionRequest"]/UseDataSpaceRescueKey/*'/>
      </param>
      <param name="dataRoomRescueKeyPassword">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="enableRoomEncryptionRequest"]/DataRoomRescueKeyPassword/*'/>
      </param>
    </EnableRoomEncryptionRequestConstructor>
    
  </members>

  <members name="fileUploadRequest">
    <FileUploadRequest>
      <summary>
        Request to upload a new file.
      </summary>
    </FileUploadRequest>
    <ParentId>
      <summary>
        The id under which the new file should be created.
      </summary>
    </ParentId>
    <Name>
      <summary>
        The name of the new file.
      </summary>
    </Name>
    <Classification>
      <summary>
        The classification of the new file. See also <seealso cref="Dracoon.Sdk.Model.Classification"/>
      </summary>
    </Classification>
    <ResolutionStrategy>
      <summary>
        The conflict resolution strategy for the upload operation. See also <seealso cref="Dracoon.Sdk.Model.ResolutionStrategy"/>
      </summary>
    </ResolutionStrategy>
    <Notes>
      <summary>
        The notes for the new file.
      </summary>
    </Notes>
    <ExpirationDate>
      <summary>
        The expiration date of the new file.
      </summary>
    </ExpirationDate>
    <CreationTime>
      <summary>
        The real creation time of the file.
      </summary>
    </CreationTime>
    <ModificationTime>
      <summary>
        The last modification time of the file.
      </summary>
    </ModificationTime>
    <FileUploadRequestConstructor>
      <summary>
        Constructs a new file upload request.
      </summary>
      <param name="parentId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/ParentId/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/Name/*'/>
      </param>
      <param name="classification">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/Classification/*'/>
      </param>
      <param name="resolutionStrategy">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/ResolutionStrategy/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/Notes/*'/>
      </param>
      <param name="expirationDate">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/ExpirationDate/*'/>
      </param>
      <param name="creationTime">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/CreationTime/*'/>
      </param>
      <param name="modificationTime">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/ModificationTime/*'/>
      </param>
    </FileUploadRequestConstructor>
  </members>

  <members name="moveNode">
    <MoveNode>
      <summary>
        Informations about the node which should be moved.
      </summary>
    </MoveNode>
    <NodeId>
      <summary>
        The id of the node which should be moved.
      </summary>
    </NodeId>
    <NewName>
      <summary>
        A new name for the moved node.
        <para>(if not set, the moved node keeps his name)</para>
      </summary>
    </NewName>
    <MoveNodeConstructor>
      <summary>
        Constructs a new move node information.
      </summary>
      <param name="nodeId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="moveNode"]/NodeId/*'/>
      </param>
      <param name="newName">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="moveNode"]/NewName/*'/>
      </param>
    </MoveNodeConstructor>
  </members>

  <members name="moveNodesRequest">
    <MoveNodesRequest>
      <summary>
        Request to move nodes.
      </summary>
    </MoveNodesRequest>
    <TargetNodeId>
      <summary>
        The id of the node where the nodes should be moved to.
      </summary>
    </TargetNodeId>
    <NodesToBeMoved>
      <summary>
        The information about the nodes which should be moved. See also <seealso cref="Dracoon.Sdk.Model.MoveNode"/>
      </summary>
    </NodesToBeMoved>
    <ResolutionStrategy>
      <summary>
        The conflict resolution strategy for the move operation. See also <seealso cref="Dracoon.Sdk.Model.ResolutionStrategy"/>
      </summary>
    </ResolutionStrategy>
    <KeepShareLinks>
      <summary>
        Set to <c>true</c> if any existing share link which references to the moved nodes should stay usable.
      </summary>
    </KeepShareLinks>
    <MoveNodesRequestConstructor>
      <summary>
        Constructs a new move nodes request.
      </summary>
      <param name="targetNodeId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="moveNodesRequest"]/TargetNodeId/*'/>
      </param>
      <param name="nodesToBeMoved">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="moveNodesRequest"]/NodesToBeMoved/*'/>
      </param>
      <param name="resolutionStrategy">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="moveNodesRequest"]/ResolutionStrategy/*'/>
      </param>
      <param name="keepShareLinks">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="moveNodesRequest"]/KeepShareLinks/*'/>
      </param>
    </MoveNodesRequestConstructor>
  </members>

  <members name="restorePreviousVersionsRequest">

    <RestorePreviousVersionsRequest>
      <summary>
        Request to restore a previous version of a node.
      </summary>
    </RestorePreviousVersionsRequest>

    <NewParentNodeId>
      <summary>
        Set, if the node version which should be restored sould be placed on the defined new parent node. Otherwise the old place of the node version is used.
      </summary>
    </NewParentNodeId>

    <RestoreVersionIds>
      <summary>
        The version ids which should be restored.
      </summary>
    </RestoreVersionIds>

    <ResolutionStrategy>
      <summary>
        The resolution strategy for raised conficts.
      </summary>
    </ResolutionStrategy>

    <KeepShareLinks>
      <summary>
        Only for resolution strategy 'Overwrite'.
        <para>
          Set to <c>true</c> if the share link of the current version should reference the restored version. Otherwise the share link gets invalid.
        </para>
      </summary>
    </KeepShareLinks>

    <RestorePreviousVersionsRequestConstructor>
      <summary>
        Constructs a new restore previous versions request.
      </summary>
      <param name="restoreVersionIds">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="restorePreviousVersionsRequest"]/RestoreVersionIds/*'/>
      </param>
      <param name="resolutionStrategy">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="restorePreviousVersionsRequest"]/ResolutionStrategy/*'/>
      </param>
      <param name="keepShareLinks">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="restorePreviousVersionsRequest"]/KeepShareLinks/*'/>
      </param>
      <param name="newParentNodeId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="restorePreviousVersionsRequest"]/NewParentNodeId/*'/>
      </param>
    </RestorePreviousVersionsRequestConstructor>

  </members>

  <members name="updateFileRequest">
    <UpdateFileRequest>
      <summary>
        Request to update the meta data of a file.
      </summary>
    </UpdateFileRequest>
    <Id>
      <summary>
        The node id of the file which should be updated.
      </summary>
    </Id>
    <Name>
      <summary>
        The new name of the file.
      </summary>
    </Name>
    <Classification>
      <summary>
        The new classification of the file. See also <seealso cref="Dracoon.Sdk.Model.Classification"/>
      </summary>
    </Classification>
    <Notes>
      <summary>
        The new notes of the file.
      </summary>
    </Notes>
    <Expiration>
      <summary>
        The new expiration date of the file.
      </summary>
    </Expiration>
    <CreationTime>
      <summary>
        The real creation time of the file.
      </summary>
    </CreationTime>
    <ModificationTime>
      <summary>
        The last modification time of the file.
      </summary>
    </ModificationTime>
    <UpdateFileRequestConstructor>
      <summary>
        Constructs a new update file request.
      </summary>
      <param name="id">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/Id/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/Name/*'/>
      </param>
      <param name="classification">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/Classification/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/Notes/*'/>
      </param>
      <param name="expiration">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/Expiration/*'/>
      </param>
      <param name="creationTime">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/CreationTime/*'/>
      </param>
      <param name="modificationTime">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/ModificationTime/*'/>
      </param>
    </UpdateFileRequestConstructor>
  </members>

  <members name="updateFolderRequest">
    <UpdateFolderRequest>
      <summary>
        Request to update the meta data of a folder.
      </summary>
    </UpdateFolderRequest>
    <Id>
      <summary>
        The node id of the folder which should be updated.
      </summary>
    </Id>
    <Name>
      <summary>
        The new name of the folder.
      </summary>
    </Name>
    <Notes>
      <summary>
        The new notes of the folder.
      </summary>
    </Notes>
    <UpdateFolderRequestConstructor>
      <summary>
        Constructs a new update folder request.
      </summary>
      <param name="id">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFolderRequest"]/Id/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFolderRequest"]/Name/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFolderRequest"]/Notes/*'/>
      </param>
    </UpdateFolderRequestConstructor>
  </members>

  <members name="updateRoomRequest">
    <UpdateRoomRequest>
      <summary>
        Request to update the meta data of a room.
      </summary>
    </UpdateRoomRequest>
    <Id>
      <summary>
        The node id of the room which should be updated.
      </summary>
    </Id>
    <Name>
      <summary>
        The new name of the room.
      </summary>
    </Name>
    <Quota>
      <summary>
        The new quota of the room.
      </summary>
    </Quota>
    <Notes>
      <summary>
        The new notes of the room.
      </summary>
    </Notes>
    <UpdateRoomRequestConstructor>
      <summary>
        Constructs a new update room request.
      </summary>
      <param name="id">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateRoomRequest"]/Id/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateRoomRequest"]/Name/*'/>
      </param>
      <param name="quota">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateRoomRequest"]/Quota/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateRoomRequest"]/Notes/*'/>
      </param>
    </UpdateRoomRequestConstructor>
  </members>
</docs>
