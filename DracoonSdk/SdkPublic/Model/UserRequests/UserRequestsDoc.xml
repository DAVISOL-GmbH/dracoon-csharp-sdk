<docs>

  <members name="deletePreviousVersionsRequest">

    <DeletePreviousVersionsRequest>
      <summary>
        Request to delete specific node versions.
      </summary>
    </DeletePreviousVersionsRequest>

    <VersionIds>
      <summary>
        The specific node version ids which should be deleted.
      </summary>
    </VersionIds>

    <DeletePreviousVersionsRequestConstructor>
      <summary>
        Constructs a new delete previous versions request.
      </summary>
      <param name="versionIds">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="deletePreviousVersionsRequest"]/VersionIds/*'/>
      </param>
    </DeletePreviousVersionsRequestConstructor>

  </members>

  <members name="deleteNodesRequest">
    <DeleteNodesRequest>
      <summary>
        Request to delete nodes.
      </summary>
    </DeleteNodesRequest>
    <Ids>
      <summary>
        The node ids which should be deleted.
      </summary>
    </Ids>
    <DeleteNodesRequestConstructor>
      <summary>
        Constructs a new delete nodes request.
      </summary>
      <param name="ids">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="deleteNodesRequest"]/Ids/*'/>
      </param>
    </DeleteNodesRequestConstructor>
  </members>

  <members name="enableRoomEncryptionRequest">
    <EnableRoomEncryptionRequest>
      <summary>
        Request to enable the encryption in the specified room.
      </summary>
    </EnableRoomEncryptionRequest>
    <Id>
      <summary>
        The room id for which the encryption should be enabled.
      </summary>
    </Id>
    <IsEncryptionEnabled>
      <summary>
        If set to <c>true</c> the encryption for the room will be enabled, otherwise the encryption of the will be disabled.
      </summary>
    </IsEncryptionEnabled>
    <UseDataSpaceRescueKey>
      <summary>
        If set to <c>true</c> the rescue key of the dataspace will be usable at the room.
      </summary>
    </UseDataSpaceRescueKey>
    <DataRoomRescueKeyPassword>
      <summary>
        If a room rescue key should be set you have to specify a private key password for the new key pair.
      </summary>
    </DataRoomRescueKeyPassword>

    <DataRoomRescueKeyPairAlgorithm>
      <summary>
        The algorithm for the key pair which should be used as rescue key pair.
      </summary>
    </DataRoomRescueKeyPairAlgorithm>
    
    <EnableRoomEncryptionRequestConstructor>
      <summary>
        Constructs a new enable room encryption request.
      </summary>
      <param name="id">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="enableRoomEncryptionRequest"]/Id/*'/>
      </param>
      <param name="dataRoomRescueKeyPairAlgorithm">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="enableRoomEncryptionRequest"]/DataRoomRescueKeyPairAlgorithm/*'/>
      </param>
      <param name="isEncryptionEnabled">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="enableRoomEncryptionRequest"]/IsEncryptionEnabled/*'/>
      </param>
      <param name="useDataSpaceRescueKey">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="enableRoomEncryptionRequest"]/UseDataSpaceRescueKey/*'/>
      </param>
      <param name="dataRoomRescueKeyPassword">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="enableRoomEncryptionRequest"]/DataRoomRescueKeyPassword/*'/>
      </param>
    </EnableRoomEncryptionRequestConstructor>
    
  </members>

  <members name="fileUploadRequest">
    <FileUploadRequest>
      <summary>
        Request to upload a new file.
      </summary>
    </FileUploadRequest>
    <ParentId>
      <summary>
        The id under which the new file should be created.
      </summary>
    </ParentId>
    <Name>
      <summary>
        The name of the new file.
      </summary>
    </Name>
    <Classification>
      <summary>
        The classification of the new file. See also <seealso cref="Dracoon.Sdk.Model.Classification"/>
      </summary>
    </Classification>
    <ResolutionStrategy>
      <summary>
        The conflict resolution strategy for the upload operation. See also <seealso cref="Dracoon.Sdk.Model.ResolutionStrategy"/>
      </summary>
    </ResolutionStrategy>
    <Notes>
      <summary>
        The notes for the new file.
      </summary>
    </Notes>
    <ExpirationDate>
      <summary>
        The expiration date of the new file.
      </summary>
    </ExpirationDate>
    <CreationTime>
      <summary>
        The real creation time of the file.
      </summary>
    </CreationTime>
    <ModificationTime>
      <summary>
        The last modification time of the file.
      </summary>
    </ModificationTime>
    <FileUploadRequestConstructor>
      <summary>
        Constructs a new file upload request.
      </summary>
      <param name="parentId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/ParentId/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/Name/*'/>
      </param>
      <param name="classification">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/Classification/*'/>
      </param>
      <param name="resolutionStrategy">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/ResolutionStrategy/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/Notes/*'/>
      </param>
      <param name="expirationDate">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/ExpirationDate/*'/>
      </param>
      <param name="creationTime">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/CreationTime/*'/>
      </param>
      <param name="modificationTime">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="fileUploadRequest"]/ModificationTime/*'/>
      </param>
    </FileUploadRequestConstructor>
  </members>

  <members name="restorePreviousVersionsRequest">

    <RestorePreviousVersionsRequest>
      <summary>
        Request to restore a previous version of a node.
      </summary>
    </RestorePreviousVersionsRequest>

    <NewParentNodeId>
      <summary>
        Set, if the node version which should be restored sould be placed on the defined new parent node. Otherwise the old place of the node version is used.
      </summary>
    </NewParentNodeId>

    <RestoreVersionIds>
      <summary>
        The version ids which should be restored.
      </summary>
    </RestoreVersionIds>

    <ResolutionStrategy>
      <summary>
        The resolution strategy for raised conficts.
      </summary>
    </ResolutionStrategy>

    <KeepShareLinks>
      <summary>
        Only for resolution strategy 'Overwrite'.
        <para>
          Set to <c>true</c> if the share link of the current version should reference the restored version. Otherwise the share link gets invalid.
        </para>
      </summary>
    </KeepShareLinks>

    <RestorePreviousVersionsRequestConstructor>
      <summary>
        Constructs a new restore previous versions request.
      </summary>
      <param name="restoreVersionIds">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="restorePreviousVersionsRequest"]/RestoreVersionIds/*'/>
      </param>
      <param name="resolutionStrategy">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="restorePreviousVersionsRequest"]/ResolutionStrategy/*'/>
      </param>
      <param name="keepShareLinks">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="restorePreviousVersionsRequest"]/KeepShareLinks/*'/>
      </param>
      <param name="newParentNodeId">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="restorePreviousVersionsRequest"]/NewParentNodeId/*'/>
      </param>
    </RestorePreviousVersionsRequestConstructor>

  </members>

  <members name="updateFileRequest">
    <UpdateFileRequest>
      <summary>
        Request to update the meta data of a file.
      </summary>
    </UpdateFileRequest>
    <Id>
      <summary>
        The node id of the file which should be updated.
      </summary>
    </Id>
    <Name>
      <summary>
        The new name of the file.
      </summary>
    </Name>
    <Classification>
      <summary>
        The new classification of the file. See also <seealso cref="Dracoon.Sdk.Model.Classification"/>
      </summary>
    </Classification>
    <Notes>
      <summary>
        The new notes of the file.
      </summary>
    </Notes>
    <Expiration>
      <summary>
        The new expiration date of the file.
      </summary>
    </Expiration>
    <CreationTime>
      <summary>
        The real creation time of the file.
      </summary>
    </CreationTime>
    <ModificationTime>
      <summary>
        The last modification time of the file.
      </summary>
    </ModificationTime>
    <UpdateFileRequestConstructor>
      <summary>
        Constructs a new update file request.
      </summary>
      <param name="id">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/Id/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/Name/*'/>
      </param>
      <param name="classification">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/Classification/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/Notes/*'/>
      </param>
      <param name="expiration">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/Expiration/*'/>
      </param>
      <param name="creationTime">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/CreationTime/*'/>
      </param>
      <param name="modificationTime">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFileRequest"]/ModificationTime/*'/>
      </param>
    </UpdateFileRequestConstructor>
  </members>

  <members name="updateFolderRequest">
    <UpdateFolderRequest>
      <summary>
        Request to update the meta data of a folder.
      </summary>
    </UpdateFolderRequest>
    <Id>
      <summary>
        The node id of the folder which should be updated.
      </summary>
    </Id>
    <Name>
      <summary>
        The new name of the folder.
      </summary>
    </Name>
    <Notes>
      <summary>
        The new notes of the folder.
      </summary>
    </Notes>
    <UpdateFolderRequestConstructor>
      <summary>
        Constructs a new update folder request.
      </summary>
      <param name="id">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFolderRequest"]/Id/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFolderRequest"]/Name/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateFolderRequest"]/Notes/*'/>
      </param>
    </UpdateFolderRequestConstructor>
  </members>

  <members name="updateRoomRequest">
    <UpdateRoomRequest>
      <summary>
        Request to update the meta data of a room.
      </summary>
    </UpdateRoomRequest>
    <Id>
      <summary>
        The node id of the room which should be updated.
      </summary>
    </Id>
    <Name>
      <summary>
        The new name of the room.
      </summary>
    </Name>
    <Quota>
      <summary>
        The new quota of the room.
      </summary>
    </Quota>
    <Notes>
      <summary>
        The new notes of the room.
      </summary>
    </Notes>
    <UpdateRoomRequestConstructor>
      <summary>
        Constructs a new update room request.
      </summary>
      <param name="id">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateRoomRequest"]/Id/*'/>
      </param>
      <param name="name">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateRoomRequest"]/Name/*'/>
      </param>
      <param name="quota">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateRoomRequest"]/Quota/*'/>
      </param>
      <param name="notes">
        <include file="UserRequestsDoc.xml" path='docs/members[@name="updateRoomRequest"]/Notes/*'/>
      </param>
    </UpdateRoomRequestConstructor>
  </members>
</docs>
