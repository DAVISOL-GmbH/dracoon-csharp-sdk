<doc>
  <members name="dracoonFilter">

    <DracoonFilter>
      <summary>
        Super class for all specific filters which holds the single added filters and checks if they are only added once.
      </summary>
    </DracoonFilter>

    <ToString>
      <summary>
        Builds the string which contains all filters separated with '|'.
      </summary>
      <returns>
        The string with all single filter strings.
      </returns>
    </ToString>

  </members>

  <members name="dracoonFilterType">

    <DracoonFilterType>
      <summary>
        Class which holds/builds a single specific filter.
      </summary>
      <typeparam name="T">
        The specific filter class definition like <see cref="Dracoon.Sdk.Filter.NodeTypeFilter"/>.
      </typeparam>
    </DracoonFilterType>

    <ToString>
      <summary>
        Builds the string which contains a single filter like "type:eq:room".
      </summary>
      <returns>
        The single filter string.
      </returns>
    </ToString>

  </members>

  <members name="filterParam">

    <FilterParam>
      <summary>
        Class which defines the resulting filter and the possible build functions to get the final filter.
      </summary>
      <typeparam name="T">
        The filter type specification of the final filter class. e.g. <see cref="Dracoon.Sdk.Filter.NodeTypeFilter"/>
      </typeparam>
      <typeparam name="V">
        The definition of the final filter class. See also <seealso cref="Dracoon.Sdk.Filter.DracoonFilterType{T}"/>
      </typeparam>
    </FilterParam>

    <Build>
      <summary>
        Builds the final filter class which can be put into the request filter class. e.g. <see cref="Dracoon.Sdk.Filter.GetNodesFilter.AddNodeTypeFilter(DracoonFilterType{NodeTypeFilter})"/>
      </summary>
      <returns>The current filter class</returns>
    </Build>

  </members>

</doc>